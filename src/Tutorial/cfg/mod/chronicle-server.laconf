modules
{
  //The server module defines how server application stores chronicle APM data
  module
  {
    name="chronicle.server"
    type="Azos.Sky.Chronicle.Server.ChronicleServerLogic, Azos.Sky"
    log-level=$(/machine/$log-level-comp)

    store
    {
      name="mongo.chronicle.store"
      type="Azos.Sky.Chronicle.Server.MongoChronicleStore, Azos.Sky.MongoDb"
      cs-log-database="mongo{  server='appliance://'  }" //use MongoDb appliance
      cs-instr-database=$($cs-log-database)
    }

    //Configure archive for log data a server-side log-graph for upstreaming
    //log data into other services, such as APM solutions like ELK, Splunk etc.
    log-archive
    {
      type-path="Azos.Log.Sinks, Azos"
      default-failover="fail.chronicle"
      reliable=true //wait on shutdown until everything is flushed into sinks

      sink
      {
        order=0
        name="fail.chronicle"
        type="CSVFileSink"
        only-failures=true
        path=$(/paths/$log)
        filename="{0:yyyyMMdd}-$(/$name)-$($name).csv.log"
      }

      sink
      {
        order=100
        name="archive.chronicle"
        type="ArchiveSink"
        path=$(/paths/$log)
        filename="{0:yyyyMMdd}-$(/$name)-$($name).larx"

        archive-version-major=1
        archive-version-minor=0
        archive-description="My application log chronicle archive"
        archive-page-size=180000 //roughly 180Kb, pages get aligned on a 16byte-boundary anyway
        archive-channel=oplog

        //Optional: turn-on compression such as built-in `gzip` or `gzip-max`
        //Compression is performed page-by-page as archive gets written.
        //`gzip-max` is slower an yields 5-10% better compression
        archive-compression-scheme=gzip

        //Optional: uncomment the encryption if you have sensitive archived data
        //The encryption scheme setting is the name of  algorithm+keyset which must be
        //registered in app chassis security manager/cryptography section, thus
        //you can use any cryptographic algorithm.
        //Encryption is performed page-by-page as archive gets written.
        //archive-encryption-scheme="internal.oplog.beta"

        ////You could mount a file system and direct the log output into it (e.g. Amazon S3)
        //file-system
        //{
        //  connect-params{ }
        //}
      }

    }//log-archive
  }
}
